@startuml
!include Styles.puml

skinparam sequenceReferenceBackgroundColor #ffffff
skinparam noteTextAlignment left

Actor User USER_COLOR
Participant ":MoneyGoWhere" as MoneyGoWhere MONEYGOWHERE_COLOR_1
Participant ":UserInterface" as UserInterface USER_INTERFACE_COLOR_1
Participant ":Parser" as Parser PARSER_COLOR_1
Participant ":Logger" as Logger LOGGER_COLOR_1
Participant ":Data" as Data DATA_COLOR_1
Participant ":Expense" as Expense DATA_COLOR_1
Participant ":Storage" as Storage STORAGE_COLOR_1

User -[USER_COLOR]> MoneyGoWhere
activate MoneyGoWhere MONEYGOWHERE_COLOR_1

create UserInterface
MoneyGoWhere -[MONEYGOWHERE_COLOR_1]> UserInterface
activate UserInterface USER_INTERFACE_COLOR_1

create Logger
UserInterface -[USER_INTERFACE_COLOR_1]> Logger
activate Logger LOGGER_COLOR_1

Logger --[LOGGER_COLOR_1]> UserInterface
deactivate Logger

create Data
UserInterface -[USER_INTERFACE_COLOR_1]> Data
activate Data DATA_COLOR_1

Data --[DATA_COLOR_1]> UserInterface
deactivate Data

UserInterface -[USER_INTERFACE_COLOR_1]> MoneyGoWhere
deactivate UserInterface

MoneyGoWhere -[MONEYGOWHERE_COLOR_1]> UserInterface : run()
activate UserInterface USER_INTERFACE_COLOR_1

ref over UserInterface, Data, Storage
    load data from file
end ref

loop command not equals "Bye"
    ref over User, UserInterface, Parser, Logger
        get user command
    end ref

    opt consoleCommand is instance of ConsoleCommandAddExpense
        UserInterface -[USER_INTERFACE_COLOR_1]> UserInterface : \lrunCommandAddExpense(\n\tconsoleCommand:ConsoleCommandAddExpense\n)
        activate UserInterface USER_INTERFACE_COLOR_1

        note right
            This diagram is not exhaustive. The other commands
            are handled by different command handler functions.
        end note

        create Expense
        UserInterface -[USER_INTERFACE_COLOR_1]> Expense :create
        activate Expense DATA_COLOR_1

        Expense --[DATA_COLOR_1]> UserInterface
        deactivate Expense

        UserInterface -[USER_INTERFACE_COLOR_1]> Data : addExpense(expense:Expense)
        activate Data DATA_COLOR_1

        Data --[DATA_COLOR_1]> UserInterface
        deactivate Data

        ref over UserInterface
            printing an expense
        end ref

        ref over UserInterface, Storage
            save data to file
        end ref

        UserInterface --[USER_INTERFACE_COLOR_1]> UserInterface
        deactivate UserInterface
    end opt
end loop

UserInterface --[USER_INTERFACE_COLOR_1]> MoneyGoWhere
deactivate UserInterface

destroy UserInterface
destroy Parser
destroy Logger
destroy Data
destroy Expense
destroy Storage

MoneyGoWhere --[MONEYGOWHERE_COLOR_1]> User
deactivate MoneyGoWhere

destroy MoneyGoWhere
@enduml
