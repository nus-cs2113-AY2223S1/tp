@startuml
!include style.puml

skinparam SequenceReferenceBackgroundColor #white

Participant "parserManager:\nParserManager" as ParserManager PARSER_COLOR_T4
Participant "parser:CommandPairParser" as Parser PARSER_COLOR
Participant "command:CommandPair" as CommandPair COMMAND_COLOR
Participant "clientList:ClientList" as ClientList CLIENT_LIST_COLOR
Participant "propertyList:PropertyList" as PropertyList PROPERTY_LIST_COLOR
Participant "pairingList:PairingList" as PairingList PAIRING_LIST_COLOR
Participant ":Storage" as Storage STORAGE_COLOR
Participant "ui:Ui" as Ui #lightgrey


-[USER_COLOR]> ParserManager : parseCommand(userInputText:String)
activate ParserManager PARSER_COLOR_T4

create Parser
ParserManager-[DUKE_COLOR]> Parser : CommandPairParser(commandDetail:String)
activate Parser PARSER_COLOR
return :CommandPairParser
return parser:CommandPairParser

-[DUKE_COLOR]> Parser : parseCommand()
activate Parser PARSER_COLOR
note over Parser: Omitted for brevity: Raw inputs are processed\n by a series of self-invocations in this section.

create CommandPair
Parser -[COMMAND_COLOR]> CommandPair : CommandPair(integerDetails: ArrayList<Integer>)
activate CommandPair COMMAND_COLOR
return :CommandPair
return :CommandPair

-[COMMAND_COLOR]> CommandPair : execute(ui:Ui, storage:Storage, propertyList:PropertyList, clientList:ClientList, pairingList:PairingList)
activate CommandPair COMMAND_COLOR
note over CommandPair, PropertyList: Omitted for brevity: Command input is validated against data from propertyList and clientList.\nIf the provided indexes are out of the list bounds, exceptions are thrown.

CommandPair -[CLIENT_LIST_COLOR]> ClientList : getClientList()
activate ClientList CLIENT_LIST_COLOR
ClientList --> CommandPair : clientList:ArrayList<Client>
deactivate ClientList

CommandPair -[PROPERTY_LIST_COLOR]> PropertyList : getPropertyList()
activate PropertyList PROPERTY_LIST_COLOR
PropertyList --> CommandPair : propertyList:ArrayList<Property>
deactivate PropertyList

note over CommandPair, PairingList: Omitted for brevity: Command input is validated against data from pairingList.\nIf there is an existing pair or exceeded budget, exceptions are thrown.

CommandPair -[PAIRING_LIST_COLOR]> PairingList : addPairing(client:Client, property:Property)
activate PairingList PAIRING_LIST_COLOR
PairingList --> CommandPair
deactivate PairingList

CommandPair -[STORAGE_COLOR]> Storage : addToPairFile(clientStorageData:String, propertyStorageData:String)
activate Storage STORAGE_COLOR
return

CommandPair -[UI_COLOR]> Ui : showPairedConfirmationMessage(client:Client, property:Property)
activate Ui UI_COLOR
return
return





@enduml