@startuml

hide footbox

activate ":Duke"

":Duke" -> ":Ui" : getUserInput()
activate ":Ui"

":Ui" --> ":Duke" : userInput : String
deactivate ":Ui"

":Duke" -> ":CommandParser" : CommandParser.getUserCommand(userInput)
activate ":CommandParser"

":CommandParser" -> ":CommandParser" : parseUserCommand(userInput)
activate ":CommandParser"

":CommandParser" --> ":CommandParser" : userInputTokenized : String[]
deactivate ":CommandParser"

alt view command

    ":CommandParser" -> ":CommandParser" : isValidViewCommand(userInputTokenized)
    activate ":CommandParser"

    ":CommandParser" --> ":CommandParser" : :boolean
    deactivate ":CommandParser"

    opt is valid view command

        create ":ViewCommand"
        ":CommandParser" -> ":ViewCommand" : ViewCommand(userInputTokenized, CommandType.VIEW)
        activate ":ViewCommand"

        ":ViewCommand" --> ":CommandParser" : newExitCommand : ViewCommand
        deactivate ":ViewCommand"
    end

else other command

end

":CommandParser" --> ":Duke" : newUserCommand : Command
deactivate ":CommandParser"

alt exit command

":Duke" -> ":Duke" : executeViewCommand(userUniversityListManager, timetableManager, newUserCommand)
activate ":Duke"

   ":Duke" -> ":ViewCommand" : getViewOption()
   activate ":ViewCommand"

   ":ViewCommand" --> ":Duke" : viewOption :String
   deactivate ":ViewCommand"

   alt viewOption is LISTS
   ":Duke" -> ":UserUniversityListManager" : displayAll()
   activate ":UserUniversityListManager"

   deactivate ":UserUniversityListManager"
   else viewOption is DELETE_HISTORY
    ":Duke" -> ":UserUniversityListManager" : getUserDeletedModules()
    activate ":UserUniversityListManager"

    ":UserUniversityListManager" --> ":Duke" : UserDeletedModules
    deactivate ":UserUniversityListManager"

    ":Duke" -> ":UserDeletedModules" : displayAll()
    activate ":UserDeletedModules"

    deactivate ":UserDeletedModules"

   else viewOption is UNIVERSITY
    ":Duke" -> ":ViewCommand" : getUniversityName()
    activate ":ViewCommand"

    ":ViewCommand" --> ":Duke" : universityName :String
    deactivate ":ViewCommand"
    ":Duke" -> ":UserUniversityListManager" : displayUniversity(universityName)
    activate ":UserUniversityListManager"

    deactivate ":UserUniversityListManager"
    ":Duke" -> ":TimetableManager" : printTimetable(universityName)
    activate ":TimetableManager"

    deactivate ":TimetableManager"

   else viewOption is TIMETABLES
    ":Duke" -> ":TimetableManager" : printAllTimeTables()
    activate ":TimetableManager"

    deactivate ":TimetableManager"

else other command
deactivate ":Duke"

end

deactivate ":Duke"

@enduml