@startuml
hide footbox

Actor User
activate ":Duke"
":Duke" -> "<<class>>\nUi" : printGreeting()
activate "<<class>>\nUi"
"<<class>>\nUi" --> ":Duke"
deactivate "<<class>>\nUi"

loop until isExit
    ":Duke" -> ":Duke": readInputAndParseCommand()
    activate ":Duke"
    ":Duke" -> "<<class>>\nUi": readInput()
    activate "<<class>>\nUi"
    User -> "<<class>>\nUi":input
    return
    ":Duke" -> ":CommandParser" : createCommand()
    activate ":CommandParser"
    ":CommandParser" -> ":CommandParser" : getCommand()
    activate ":CommandParser"
    ":CommandParser" --> ":CommandParser"
    deactivate ":CommandParser"

    alt command is valid
        ":CommandParser" -> ":Command"**: new
        activate ":Command"
        return command
        return command
        ":Duke" -> ":Command" : execute command
        activate ":Command"
        ":Command" -> "<<class>>\nUi": print response
        activate "<<class>>\nUi"
        deactivate "<<class>>\nUi"
        ":Command" --> ":Duke"
        deactivate ":Command"
        destroy ":Command"
        ":Duke" -> ":StorageManager" : writeDataToFiles()
        activate ":StorageManager"
        return
        deactivate ":Duke"

    else command is invalid
        ":Duke" -> "<<class>>\nUi" : printErrorMessage()
        activate "<<class>>\nUi"
        "<<class>>\nUi" -> ":DukeException" : getMessage()
        activate ":DukeException"
        ":DukeException" --> "<<class>>\nUi"
        destroy ":DukeException"
        "<<class>>\nUi" --> ":Duke"
        deactivate "<<class>>\nUi"
    end
end
deactivate ":Duke"

@enduml