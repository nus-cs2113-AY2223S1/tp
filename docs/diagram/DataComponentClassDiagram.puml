@startuml
!include Style.puml

class TransactionList {
    + getEntry(int index):Transaction
    + addExpense(description:String, amount:int,
              category:String, date:LocalDate) : String
    + addIncome(description:String, amount:int,
              category:String, date:LocalDate) : String
    + listTransactions(type: String, category:String,
              date:LocalDate) : String
    + getTransactionsByMonth(year: int, month:int) : String
    + findTransaction(String) : String
    + deleteTransaction(int) : String
    + purgeTransactions()

}

abstract class "Transaction"{
    - category: String
    - description: String
    - amount: int
    - date: LocalDate
    + Expense(description:String, amount:int,
                  category:String, date:LocalDate)
    + setDescription(String)
    + setAmount(int)
    + setCategory(String)
    + setDate(LocalDate)
}

class Income {
    + Income(description:String, amount:int,
              category:String, date:LocalDate)
}

class Expense {
    + Expense(description:String, amount:int,
              category:String, date:LocalDate)
}

abstract class Command {
    + execute()
}

abstract class Storage {
    + initializeFile()
    - storeFileValuesLocally()
}


class Budget{
    - budget : long {static}
    + getBudget() : long {static}
    + setBudget(long) {static}
}

class Duke{
}

together {
  class Command
  class Income
  class Expense
}


together {
  class Storage
  class TransactionList
  class Budget
}


Income --|> "Transaction"
Expense --|> "Transaction"

TransactionList "1" *-down> "*" "Transaction" : contains
Storage -[dashed]up-> "Budget" : initialize >
Storage -[dashed]down-> "TransactionList" : initialize >
Command -[dashed]up-> "Budget" : set >
Command -[dashed]right-> "TransactionList" : add, edit, delete, purge, find, list, stats >

Duke -down-> "1" "TransactionList"
Duke  -> "1" "Storage"
Duke -[dashed]left-> "Command" : executes >


@enduml