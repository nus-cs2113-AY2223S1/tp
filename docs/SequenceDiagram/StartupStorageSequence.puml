@startuml
skinparam Style strictuml
autonumber


participant ":Recipeditor" as recipeditor
participant ":Storage" as store
participant ":TitleFileParser" as titleparse
participant ":RecipeFileParser" as recipeparse
participant ":RecipeList" as recipelist
participant ":Files" as files
participant ":FileWriter" as fw
database FileDirectory

recipeditor -> recipeditor: start()
recipeditor -> store: createAppFolder()


store -> files: createDirectories(RECIPES_FOLDER_PATH)
files -> FileDirectory: create folder "./RecipeData/Recipes"
store -> files: createDirectories(APP_DATA_FOLDER_PATH)
files -> FileDirectory: create folder "./RecipeData/App"
destroy files

store -> store: templateFile()

alt TEMPLATE_FILE_PATH exists

else
store-> fw: FileWriter(TEMPLATE_FILE_PATH)
store-> fw: write(TEMPLATE_FILE)
fw->FileDirectory: create file `Template.txt``
store-> fw: close()
destroy fw
end


recipeditor -> store: createFile(ALL_RECIPES_FILE_PATH)
store -> files: Files(ALL_RECIPES_FILE_PATH)
store -> files: createnewFile()
files -> FileDirectory: create file `AllRecipes.txt`
destroy files



recipeditor -> store: loadRecipesToRecipeTitlesList()
store -> store: loadFileContent(ALL_RECIPES_FILE_PATH)
store -> FileDirectory: via Scanner
FileDirectory --> store: return content of `AllRecipes.txt`
store -> titleparse: parseTitleFileToRecipeTitles(content)
loop line of `AllRecipes.txt`
    alt line is blank || not alphanumerical || >255 characters
    ref over titleparse
    continue
    end
    end alt
    alt no recipe file with that title
    titleparse -> store: checkIfFileExists()
    store -> FileDirectory: check file existence
    ref over titleparse
    continue
    end
    end alt

titleparse -> store: loadFileContent(recipeFilePath)
store -> FileDirectory: via Scanner
FileDirectory --> store: return content of recipeFilePath
store --> titleparse: return content of recipeFilePath
titleparse -> recipeparse: parseTextToRecipe(content)
    ref over recipeparse
        Parse Text to Recipe
    end
recipeparse --> titleparse: return addedRecipe
titleparse -> recipelist: addRecipe(addedRecipe)
    titleparse -> recipelist: addRecipeTitle(line)


end loop
destroy titleparse




store --> recipeditor:



@enduml